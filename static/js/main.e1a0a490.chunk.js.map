{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgessBar","setFile","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","map","key","layout","whileHover","scale","opacity","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1a0a490.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Upload your photos and show them to the world.</p>\n    </div>\n  )\n}\n\nexport default Title;","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBwYIvuagb6nmC84YfAVy8sIEy9_tsErH0\",\r\n    authDomain: \"firegram-25b61.firebaseapp.com\",\r\n    projectId: \"firegram-25b61\",\r\n    storageBucket: \"firegram-25b61.appspot.com\",\r\n    messagingSenderId: \"1028247022367\",\r\n    appId: \"1:1028247022367:web:41fdc28a5be0a076b7de2a\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };","import {useState, useEffect} from 'react';\r\nimport {projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect( ()=> {\r\n        //references\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = ( snap.bytesTransferred / snap.totalBytes ) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({ url, createdAt });\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst ProgessBar = ({ file, setFile }) => {\r\n    const { url, progress } = useStorage(file);\r\n    \r\n    useEffect( () => {\r\n        if (url) {\r\n            setFile(null);\r\n        }\r\n    }, [url, setFile]);\r\n\r\n    return (\r\n        <motion.div className='progress-bar'\r\n            initial={ { width : 0 } }\r\n            animate={ { width : progress+'%' } }\r\n        > \r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgessBar;","import React, { useState } from 'react';\r\nimport ProgessBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = ['image/png' , 'image/jpeg'];\r\n\r\n    const changeHandler = (e) => {\r\n        let selected = e.target.files[0];\r\n\r\n        if(selected && types.includes(selected.type)){\r\n            setFile(selected);\r\n            setError('');\r\n        }else{\r\n            setFile(null);\r\n            setError('Choose a png or jpeg file');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={changeHandler} />\r\n                <span>+</span>\r\n            </label>\r\n            <div className='output'>\r\n                { error && <div className='error'> {error} </div> }\r\n                { file && <div> {file.name} </div> }\r\n                { file && <ProgessBar file={file} setFile={setFile} /> }\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UploadForm;","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n\r\n    useEffect( () => {\r\n        const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt', 'desc')           //ordered in descending order of time i.e. newest is added at top\r\n        .onSnapshot( (snap) => {\r\n            let documents = [];\r\n        snap.forEach(doc => {\r\n            documents.push({...doc.data(), id: doc.id})\r\n        });\r\n        setDocs(documents);\r\n        });\r\n\r\n        return () => unsub();\r\n        \r\n    }, [collection])\r\n\r\n    return { docs };\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ImageGrid = ({setSelectedImg}) => {\r\n    const { docs } = useFirestore('images');\r\n    console.log(docs);\r\n\r\n    return (\r\n        <div className='img-grid'>\r\n            { docs && docs.map(doc => (\r\n                <motion.div className = 'img-wrap' key= {doc.id}\r\n                    layout\r\n                    whileHover={ { scale : 1.1 , opacity : 1 } }\r\n                    onClick= {()  => setSelectedImg(doc.url)}>\r\n                <motion.img src= {doc.url} alt='uploaded pic' \r\n                    initial={{opacity:0}}\r\n                    animate={{opacity:1}}\r\n                    transition={{delay:1}}\r\n                    />    \r\n                \r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst Modal = ({selectedImg, setSelectedImg}) => {\r\n\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains('backdrop')){           //if clicked on img, nothing happens and if clicked on background, image goes back to grid\r\n            setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handleClick}\r\n            initial={{opacity:0}}\r\n            animate={{opacity:1}}\r\n        >\r\n            <motion.img src={selectedImg} alt=\"enlarged pic\"\r\n                initial={{ y : \"-100vh\" }}\r\n                animate={{ y : 0 }}\r\n            />\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, {useState} from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nfunction App() {\n\n  const [selectedImg, setSelectedImg] = useState(null)\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid  setSelectedImg ={setSelectedImg}/>\n      { selectedImg && < Modal selectedImg = {selectedImg} setSelectedImg={setSelectedImg} /> }\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}